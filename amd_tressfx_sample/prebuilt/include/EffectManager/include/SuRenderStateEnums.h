//
// Copyright (c) 2016 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

#ifndef _SURENDERSTATEENUMS_H
#define _SURENDERSTATEENUMS_H


/// \brief Render state enumerants
///
/// \ingroup EffectManager

/// Enumeration of render state values
enum SuRenderStateValue
{
	SU_RS_VAL_NONE,

	/// Fill mode enums
	SU_RS_VAL_FILL_POINT,
	SU_RS_VAL_FILL_WIREFRAME,
	SU_RS_VAL_FILL_SOLID,

	/// Cull mode enums
	SU_RS_VAL_CULL_NONE,
	SU_RS_VAL_CULL_CW,
	SU_RS_VAL_CULL_CCW,

	/// Comparison func enums
	SU_RS_VAL_COMP_NEVER,
	SU_RS_VAL_COMP_LESS,
	SU_RS_VAL_COMP_EQUAL,
	SU_RS_VAL_COMP_LESSEQUAL,
	SU_RS_VAL_COMP_GREATER,
	SU_RS_VAL_COMP_NOTEQUAL,
	SU_RS_VAL_COMP_GREATEREQUAL,
	SU_RS_VAL_COMP_ALWAYS,

	/// Stencil op enums
	SU_RS_VAL_STENCIL_KEEP,
	SU_RS_VAL_STENCIL_ZERO,
	SU_RS_VAL_STENCIL_REPLACE,
	SU_RS_VAL_STENCIL_INCRSAT,
	SU_RS_VAL_STENCIL_DECRSAT,
	SU_RS_VAL_STENCIL_INVERT,
	SU_RS_VAL_STENCIL_INCR,
	SU_RS_VAL_STENCIL_DECR,
	SU_RS_VAL_STENCIL_SET,
	SU_RS_VAL_STENCIL_AND,
	SU_RS_VAL_STENCIL_XOR,
	SU_RS_VAL_STENCIL_OR,
	SU_RS_VAL_STENCIL_NOR,
	SU_RS_VAL_STENCIL_EQUIV,
	SU_RS_VAL_STENCIL_NAND,
	SU_RS_VAL_STENCIL_REPLACE_VALUE,

	/// Blend enums
	SU_RS_VAL_BLEND_ZERO,
	SU_RS_VAL_BLEND_ONE,
	SU_RS_VAL_BLEND_SRCCOLOR,
	SU_RS_VAL_BLEND_INVSRCCOLOR,
	SU_RS_VAL_BLEND_SRCALPHA,
	SU_RS_VAL_BLEND_INVSRCALPHA,
	SU_RS_VAL_BLEND_DESTALPHA,
	SU_RS_VAL_BLEND_INVDESTALPHA,
	SU_RS_VAL_BLEND_DESTCOLOR,
	SU_RS_VAL_BLEND_INVDESTCOLOR,
	SU_RS_VAL_BLEND_SRCALPHASAT,
	SU_RS_VAL_BLEND_BLENDFACTOR,
	SU_RS_VAL_BLEND_INVBLENDFACTOR,
	SU_RS_VAL_BLEND_SRC1COLOR,
	SU_RS_VAL_BLEND_INVSRC1COLOR,
	SU_RS_VAL_BLEND_SRC1ALPHA,
	SU_RS_VAL_BLEND_INVSRC1ALPHA,

	/// Blend op enums
	SU_RS_VAL_BLEND_OP_ADD,
	SU_RS_VAL_BLEND_OP_SUBSTRACT,
	SU_RS_VAL_BLEND_OP_REVSUBSTRACT,
	SU_RS_VAL_BLEND_OP_MIN,
	SU_RS_VAL_BLEND_OP_MAX,
	SU_RS_VAL_BLEND_OP_FACTOR_MIN,
	SU_RS_VAL_BLEND_OP_FACTOR_MAX,

	/// Filter enums
	SU_RS_VAL_FILTER_MIN_MAG_MIP_POINT,
	SU_RS_VAL_FILTER_MIN_MAG_POINT_MIP_LINEAR,
	SU_RS_VAL_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT,
	SU_RS_VAL_FILTER_MIN_POINT_MAG_MIP_LINEAR,
	SU_RS_VAL_FILTER_MIN_LINEAR_MAG_MIP_POINT,
	SU_RS_VAL_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
	SU_RS_VAL_FILTER_MIN_MAG_LINEAR_MIP_POINT,
	SU_RS_VAL_FILTER_MIN_MAG_MIP_LINEAR,
	SU_RS_VAL_FILTER_ANISOTROPIC,
	SU_RS_VAL_FILTER_COMPARISON_MIN_MAG_MIP_POINT,
	SU_RS_VAL_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR,
	SU_RS_VAL_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,
	SU_RS_VAL_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR,
	SU_RS_VAL_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT,
	SU_RS_VAL_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
	SU_RS_VAL_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT,
	SU_RS_VAL_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR,
	SU_RS_VAL_FILTER_COMPARISON_ANISOTROPIC,
	SU_RS_VAL_FILTER_MONO_1BIT,

	/// Texture address enums
	SU_RS_VAL_ADDR_WRAP,
	SU_RS_VAL_ADDR_MIRROR,
	SU_RS_VAL_ADDR_CLAMP,
	SU_RS_VAL_ADDR_BORDER,
	SU_RS_VAL_ADDR_MIRRORONCE,

	/// Tessellation mode enums
	SU_RS_VAL_TESSELLATION_MODE_CONTINUOUS,
	SU_RS_VAL_TESSELLATION_MODE_ADAPTIVE,
	SU_RS_VAL_TESSELLATION_MODE_DISABLED,

	/// Tessellation primitive types
	SU_RS_VAL_TESSELLATION_PRIM_TYPE_TRIANGLE_LIST,
	SU_RS_VAL_TESSELLATION_PRIM_TYPE_TRIANGLE_STRIP,

	// Resource format types
	SU_RS_VAL_FORMAT_R32G32B32A32_TYPELESS,
	SU_RS_VAL_FORMAT_R32G32B32A32_FLOAT,
	SU_RS_VAL_FORMAT_R32G32B32A32_UINT,
	SU_RS_VAL_FORMAT_R32G32B32A32_SINT,
	SU_RS_VAL_FORMAT_R32G32B32_TYPELESS,
	SU_RS_VAL_FORMAT_R32G32B32_FLOAT,
	SU_RS_VAL_FORMAT_R32G32B32_UINT,
	SU_RS_VAL_FORMAT_R32G32B32_SINT,
	SU_RS_VAL_FORMAT_R16G16B16A16_TYPELESS,
	SU_RS_VAL_FORMAT_R16G16B16A16_FLOAT,
	SU_RS_VAL_FORMAT_R16G16B16A16_UNORM,
	SU_RS_VAL_FORMAT_R16G16B16A16_UINT,
	SU_RS_VAL_FORMAT_R16G16B16A16_SNORM,
	SU_RS_VAL_FORMAT_R16G16B16A16_SINT,
	SU_RS_VAL_FORMAT_R32G32_TYPELESS,
	SU_RS_VAL_FORMAT_R32G32_FLOAT,
	SU_RS_VAL_FORMAT_R32G32_UINT,
	SU_RS_VAL_FORMAT_R32G32_SINT,
	SU_RS_VAL_FORMAT_R32G8X24_TYPELESS,
	SU_RS_VAL_FORMAT_D32_FLOAT_S8X24_UINT,
	SU_RS_VAL_FORMAT_R32_FLOAT_X8X24_TYPELESS,
	SU_RS_VAL_FORMAT_X32_TYPELESS_G8X24_UINT,
	SU_RS_VAL_FORMAT_R10G10B10A2_TYPELESS,
	SU_RS_VAL_FORMAT_R10G10B10A2_UNORM,
	SU_RS_VAL_FORMAT_R10G10B10A2_UINT,
	SU_RS_VAL_FORMAT_R11G11B10_FLOAT,
	SU_RS_VAL_FORMAT_R8G8B8A8_TYPELESS,
	SU_RS_VAL_FORMAT_R8G8B8A8_UNORM,
	SU_RS_VAL_FORMAT_R8G8B8A8_UNORM_SRGB,
	SU_RS_VAL_FORMAT_R8G8B8A8_UINT,
	SU_RS_VAL_FORMAT_R8G8B8A8_SNORM,
	SU_RS_VAL_FORMAT_R8G8B8A8_SINT,
	SU_RS_VAL_FORMAT_R16G16_TYPELESS,
	SU_RS_VAL_FORMAT_R16G16_FLOAT,
	SU_RS_VAL_FORMAT_R16G16_UNORM,
	SU_RS_VAL_FORMAT_R16G16_UINT,
	SU_RS_VAL_FORMAT_R16G16_SNORM,
	SU_RS_VAL_FORMAT_R16G16_SINT,
	SU_RS_VAL_FORMAT_R32_TYPELESS,
	SU_RS_VAL_FORMAT_D32_FLOAT,
	SU_RS_VAL_FORMAT_R32_FLOAT,
	SU_RS_VAL_FORMAT_R32_UINT,
	SU_RS_VAL_FORMAT_R32_SINT,
	SU_RS_VAL_FORMAT_R24G8_TYPELESS,
	SU_RS_VAL_FORMAT_D24_UNORM_S8_UINT,
	SU_RS_VAL_FORMAT_R24_UNORM_X8_TYPELESS,
	SU_RS_VAL_FORMAT_X24_TYPELESS_G8_UINT,
	SU_RS_VAL_FORMAT_R8G8_TYPELESS,
	SU_RS_VAL_FORMAT_R8G8_UNORM,
	SU_RS_VAL_FORMAT_R8G8_UINT,
	SU_RS_VAL_FORMAT_R8G8_SNORM,
	SU_RS_VAL_FORMAT_R8G8_SINT,
	SU_RS_VAL_FORMAT_R16_TYPELESS,
	SU_RS_VAL_FORMAT_R16_FLOAT,
	SU_RS_VAL_FORMAT_D16_UNORM,
	SU_RS_VAL_FORMAT_R16_UNORM,
	SU_RS_VAL_FORMAT_R16_UINT,
	SU_RS_VAL_FORMAT_R16_SNORM,
	SU_RS_VAL_FORMAT_R16_SINT,
	SU_RS_VAL_FORMAT_R8_TYPELESS,
	SU_RS_VAL_FORMAT_R8_UNORM,
	SU_RS_VAL_FORMAT_R8_UINT,
	SU_RS_VAL_FORMAT_R8_SNORM,
	SU_RS_VAL_FORMAT_R8_SINT,
	SU_RS_VAL_FORMAT_A8_UNORM,
	SU_RS_VAL_FORMAT_R1_UNORM,
	SU_RS_VAL_FORMAT_R9G9B9E5_SHAREDEXP,
	SU_RS_VAL_FORMAT_R8G8_B8G8_UNORM,
	SU_RS_VAL_FORMAT_G8R8_G8B8_UNORM,
	SU_RS_VAL_FORMAT_BC1_TYPELESS,
	SU_RS_VAL_FORMAT_BC1_UNORM,
	SU_RS_VAL_FORMAT_BC1_UNORM_SRGB,
	SU_RS_VAL_FORMAT_BC2_TYPELESS,
	SU_RS_VAL_FORMAT_BC2_UNORM,
	SU_RS_VAL_FORMAT_BC2_UNORM_SRGB,
	SU_RS_VAL_FORMAT_BC3_TYPELESS,
	SU_RS_VAL_FORMAT_BC3_UNORM,
	SU_RS_VAL_FORMAT_BC3_UNORM_SRGB,
	SU_RS_VAL_FORMAT_BC4_TYPELESS,
	SU_RS_VAL_FORMAT_BC4_UNORM,
	SU_RS_VAL_FORMAT_BC4_SNORM,
	SU_RS_VAL_FORMAT_BC5_TYPELESS,
	SU_RS_VAL_FORMAT_BC5_UNORM,
	SU_RS_VAL_FORMAT_BC5_SNORM,
	SU_RS_VAL_FORMAT_BC7_TYPELESS,
	SU_RS_VAL_FORMAT_BC7_UNORM,
	SU_RS_VAL_FORMAT_BC7_UNORM_SRGB,
	SU_RS_VAL_FORMAT_B5G6R5_UNORM,
	SU_RS_VAL_FORMAT_B5G5R5A1_UNORM,
	SU_RS_VAL_FORMAT_B8G8R8A8_UNORM,
	SU_RS_VAL_FORMAT_B8G8R8X8_UNORM,
	SU_RS_VAL_FORMAT_ATITC_RGB,
	SU_RS_VAL_FORMAT_ATITC_RGBA,
	SU_RS_VAL_FORMAT_ETC1,
	SU_RS_VAL_FORMAT_ETC3,
	SU_RS_VAL_FORMAT_ETC5,
	SU_RS_VAL_FORMAT_D24_COMPARISON_S8_UINT,
	SU_RS_VAL_FORMAT_D16_COMPARISON,

	/// Primitive topology types
	SU_RS_VAL_PRIMITIVE_TOPOLOGY_TYPE_POINT,
	SU_RS_VAL_PRIMITIVE_TOPOLOGY_TYPE_LINE,
	SU_RS_VAL_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE,
	SU_RS_VAL_PRIMITIVE_TOPOLOGY_TYPE_PATCH,
};

/// Enumeration of render states
enum SuRenderStateId
{
	SU_RS_ID_NONE,

	// RASTERIZER STATE
	SU_RS_ID_FILL_MODE,
	SU_RS_ID_CULL_MODE,
	SU_RS_ID_Z_BIAS,
	SU_RS_ID_Z_BIAS_CLAMP,
	SU_RS_ID_SLOPE_SCALED_Z_BIAS,
	SU_RS_ID_DEPTH_Z_CLIP_ENABLE,
	SU_RS_ID_DEPTH_Z_CLIP_NEAR_ENABLE,
	SU_RS_ID_DEPTH_Z_CLIP_FAR_ENABLE,
	SU_RS_ID_MULTISAMPLE_ENABLE,
	SU_RS_ID_ANTIALIASED_LINE_ENABLE,
	SU_RS_ID_SAMPLE_MASK,

	// DEPTH STATE
	SU_RS_ID_Z_ENABLE,
	SU_RS_ID_Z_WRITE_ENABLE,
	SU_RS_ID_Z_FUNC,

	// STENCIL STATE
	SU_RS_ID_STENCIL_ENABLE,
	SU_RS_ID_STENCIL_READ_MASK,
	SU_RS_ID_STENCIL_WRITE_MASK,
	SU_RS_ID_STENCIL_FAIL_OP,
	SU_RS_ID_STENCIL_Z_FAIL_OP,
	SU_RS_ID_STENCIL_PASS_OP,
	SU_RS_ID_STENCIL_FUNC,
	SU_RS_ID_BACK_STENCIL_FAIL_OP,
	SU_RS_ID_BACK_STENCIL_Z_FAIL_OP,
	SU_RS_ID_BACK_STENCIL_PASS_OP,
	SU_RS_ID_BACK_STENCIL_FUNC,
	SU_RS_ID_STENCIL_REF,
	SU_RS_ID_STENCIL_OP_VALUE,
	SU_RS_ID_BACK_STENCIL_OP_VALUE,

	// BLEND STATE
	SU_RS_ID_ALPHA_TO_COVERAGE,
	SU_RS_ID_BLEND_ENABLE0,
	SU_RS_ID_BLEND_ENABLE1,
	SU_RS_ID_BLEND_ENABLE2,
	SU_RS_ID_BLEND_ENABLE3,
	SU_RS_ID_BLEND_ENABLE4,
	SU_RS_ID_BLEND_ENABLE5,
	SU_RS_ID_BLEND_ENABLE6,
	SU_RS_ID_BLEND_ENABLE7,
	SU_RS_ID_BLEND_ENABLE_ALL,    // Setting this state will toggle blending for ALL render targets for a particular pass at once

	SU_RS_ID_SRC_BLEND_ALL,
	SU_RS_ID_DST_BLEND_ALL,
	SU_RS_ID_BLEND_OP_ALL,
	SU_RS_ID_SRC_BLEND_ALPHA_ALL,
	SU_RS_ID_DST_BLEND_ALPHA_ALL,
	SU_RS_ID_BLEND_OP_ALPHA_ALL,

	SU_RS_ID_SRC_BLEND0,          // These render states are for supporting D3D10.1 independent blend modes per render target
	SU_RS_ID_DST_BLEND0,
	SU_RS_ID_BLEND_OP0,
	SU_RS_ID_SRC_BLEND_ALPHA0,
	SU_RS_ID_DST_BLEND_ALPHA0,
	SU_RS_ID_BLEND_OP_ALPHA0,

	SU_RS_ID_SRC_BLEND1,
	SU_RS_ID_DST_BLEND1,
	SU_RS_ID_BLEND_OP1,
	SU_RS_ID_SRC_BLEND_ALPHA1,
	SU_RS_ID_DST_BLEND_ALPHA1,
	SU_RS_ID_BLEND_OP_ALPHA1,

	SU_RS_ID_SRC_BLEND2,
	SU_RS_ID_DST_BLEND2,
	SU_RS_ID_BLEND_OP2,
	SU_RS_ID_SRC_BLEND_ALPHA2,
	SU_RS_ID_DST_BLEND_ALPHA2,
	SU_RS_ID_BLEND_OP_ALPHA2,

	SU_RS_ID_SRC_BLEND3,
	SU_RS_ID_DST_BLEND3,
	SU_RS_ID_BLEND_OP3,
	SU_RS_ID_SRC_BLEND_ALPHA3,
	SU_RS_ID_DST_BLEND_ALPHA3,
	SU_RS_ID_BLEND_OP_ALPHA3,

	SU_RS_ID_SRC_BLEND4,
	SU_RS_ID_DST_BLEND4,
	SU_RS_ID_BLEND_OP4,
	SU_RS_ID_SRC_BLEND_ALPHA4,
	SU_RS_ID_DST_BLEND_ALPHA4,
	SU_RS_ID_BLEND_OP_ALPHA4,

	SU_RS_ID_SRC_BLEND5,
	SU_RS_ID_DST_BLEND5,
	SU_RS_ID_BLEND_OP5,
	SU_RS_ID_SRC_BLEND_ALPHA5,
	SU_RS_ID_DST_BLEND_ALPHA5,
	SU_RS_ID_BLEND_OP_ALPHA5,

	SU_RS_ID_SRC_BLEND6,
	SU_RS_ID_DST_BLEND6,
	SU_RS_ID_BLEND_OP6,
	SU_RS_ID_SRC_BLEND_ALPHA6,
	SU_RS_ID_DST_BLEND_ALPHA6,
	SU_RS_ID_BLEND_OP_ALPHA6,

	SU_RS_ID_SRC_BLEND7,
	SU_RS_ID_DST_BLEND7,
	SU_RS_ID_BLEND_OP7,
	SU_RS_ID_SRC_BLEND_ALPHA7,
	SU_RS_ID_DST_BLEND_ALPHA7,
	SU_RS_ID_BLEND_OP_ALPHA7,

	SU_RS_ID_COLOR_WRITE_ENABLE_R0,
	SU_RS_ID_COLOR_WRITE_ENABLE_G0,
	SU_RS_ID_COLOR_WRITE_ENABLE_B0,
	SU_RS_ID_COLOR_WRITE_ENABLE_A0,

	SU_RS_ID_COLOR_WRITE_ENABLE_R1,
	SU_RS_ID_COLOR_WRITE_ENABLE_G1,
	SU_RS_ID_COLOR_WRITE_ENABLE_B1,
	SU_RS_ID_COLOR_WRITE_ENABLE_A1,

	SU_RS_ID_COLOR_WRITE_ENABLE_R2,
	SU_RS_ID_COLOR_WRITE_ENABLE_G2,
	SU_RS_ID_COLOR_WRITE_ENABLE_B2,
	SU_RS_ID_COLOR_WRITE_ENABLE_A2,

	SU_RS_ID_COLOR_WRITE_ENABLE_R3,
	SU_RS_ID_COLOR_WRITE_ENABLE_G3,
	SU_RS_ID_COLOR_WRITE_ENABLE_B3,
	SU_RS_ID_COLOR_WRITE_ENABLE_A3,

	SU_RS_ID_COLOR_WRITE_ENABLE_R4,
	SU_RS_ID_COLOR_WRITE_ENABLE_G4,
	SU_RS_ID_COLOR_WRITE_ENABLE_B4,
	SU_RS_ID_COLOR_WRITE_ENABLE_A4,

	SU_RS_ID_COLOR_WRITE_ENABLE_R5,
	SU_RS_ID_COLOR_WRITE_ENABLE_G5,
	SU_RS_ID_COLOR_WRITE_ENABLE_B5,
	SU_RS_ID_COLOR_WRITE_ENABLE_A5,

	SU_RS_ID_COLOR_WRITE_ENABLE_R6,
	SU_RS_ID_COLOR_WRITE_ENABLE_G6,
	SU_RS_ID_COLOR_WRITE_ENABLE_B6,
	SU_RS_ID_COLOR_WRITE_ENABLE_A6,

	SU_RS_ID_COLOR_WRITE_ENABLE_R7,
	SU_RS_ID_COLOR_WRITE_ENABLE_G7,
	SU_RS_ID_COLOR_WRITE_ENABLE_B7,
	SU_RS_ID_COLOR_WRITE_ENABLE_A7,

	SU_RS_ID_COLOR_WRITE_ENABLE_R_ALL,
	SU_RS_ID_COLOR_WRITE_ENABLE_G_ALL,
	SU_RS_ID_COLOR_WRITE_ENABLE_B_ALL,
	SU_RS_ID_COLOR_WRITE_ENABLE_A_ALL,

	SU_RS_ID_BLEND_FACTOR,
	SU_RS_ID_ALPHA_TEST_ENABLE,
	SU_RS_ID_ALPHA_REF,
	SU_RS_ID_ALPHA_FUNC,

	// Sampler state
	SU_RS_ID_FILTER,
	SU_RS_ID_ADDRESS_U,
	SU_RS_ID_ADDRESS_V,
	SU_RS_ID_ADDRESS_W,
	SU_RS_ID_MIN_LOD,
	SU_RS_ID_MAX_LOD,
	SU_RS_ID_MIP_LOD_BIAS,
	SU_RS_ID_MAX_ANISO,
	SU_RS_ID_COMPARISION_FUNC,
	SU_RS_ID_BORDER_COLOR,

	// Tessellation mode state
	SU_RS_ID_TESSELLATION_MODE,
	SU_RS_ID_TESSELLATION_PRIMITIVE_TYPE,
	SU_RS_ID_TESSELLATION_USE_SUPERPRIM_INDICES,

	// Render target and depth stencil state (DX12)
	SU_RS_ID_NUM_RENDER_TARGETS,
	SU_RS_ID_RENDER_TARGET_FORMAT_ALL,
	SU_RS_ID_RENDER_TARGET_FORMAT0,
	SU_RS_ID_RENDER_TARGET_FORMAT1,
	SU_RS_ID_RENDER_TARGET_FORMAT2,
	SU_RS_ID_RENDER_TARGET_FORMAT3,
	SU_RS_ID_RENDER_TARGET_FORMAT4,
	SU_RS_ID_RENDER_TARGET_FORMAT5,
	SU_RS_ID_RENDER_TARGET_FORMAT6,
	SU_RS_ID_RENDER_TARGET_FORMAT7,
	SU_RS_ID_DEPTH_STENCIL_FORMAT,
	SU_RS_ID_SAMPLE_COUNT,
	SU_RS_ID_SAMPLE_QUALITY,

	// Primitive topology (DX12)
	SU_RS_ID_PRIMITIVE_TOPOLOGY_TYPE
};
#endif
