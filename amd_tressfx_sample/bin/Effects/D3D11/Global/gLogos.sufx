//=================================================================================================================================
//
// Author: Thorsten Scheuermann
//         3D Application Research Group
//         ATI Research, Inc.
//
//=================================================================================================================================
// $Id: //depot/3darg/Demos/Effects/TressFXRelease/amd_tressfx_sample/bin/Effects/D3D11/Global/gLogos.sufx#1 $ 
// 
// Last check-in:  $DateTime: 2017/03/28 18:02:41 $ 
// Last edited by: $Author: khillesl $
//=================================================================================================================================
//   (C) ATI Research, Inc. 2006 All rights reserved. 
//=================================================================================================================================

// ART NOTES ===================================================================
ArtNotes
{
   Quad shader for showing company and partner logos.
   Copy this effect into your demo effect folder and modify it to show additional company logos.
}

Texture2D tATI  < format = RGBA, colorSpace = Linear, NoMips,
                  source0 = < fileName = "S:/Demos/CommonImages/BrandingLogos/48832F_AMDr_L_E_RGB.png",
                              channels = RGBA, colorSpace=Linear >
                >

Sampler sATI
{
   Texture = tATI
   Filter = MIN_MAG_MIP_LINEAR
   AddressU = BORDER
   AddressV = BORDER
   BorderColor = (0, 0, 0, 0)
}


Vector vRTSize    < AppUpdate = Viewport > // Rendertarget dimensions in zw
Float  fATILogoQuadHeight( 0.13 ) // height of the small logos as a fraction of the rendertarget height
Vector vATITexDim     < AppUpdate = ResourceDimensions, Slot = tATI >
//Float  fPartnerLogoQuadHeight( 0.08 ) // height of the small logos as a fraction of the rendertarget height
//Vector vPartnerTexDim < AppUpdate = ResourceDimensions, Slot = tPartner1 >
//Float fTime < AppUpdate = DemoTime >
//Float fPartnerLogoCycleTime( 10 )
//Float fPartnerLogoFadeTime( 3 )

// STREAMS =====================================================================
Stream QuadStream <Normal>
{
   float3 POSITION Position,
   float2 TEXCOORD0 UV <slot = "Color">
}

StreamMap sm1 { QuadStream }

// TECHNIQUES ==================================================================
Technique Default
{
   Properties { "Normal" }

   Pass ATILogo
   {
      StreamMap = sm1

      FillMode = SOLID
      CullMode = NONE

      // DEPTH STATE
      ZEnable = false
      ZWriteEnable = false
      BlendEnable = true

      VertexShader( HLSL )
         float4 vRTSize;
         float  fATILogoQuadHeight;
         float2 vATITexDim;

         struct VsInput
         {
            float3 vPos : POSITION;
            float2 vUV  : TEXCOORD0;
         };

         struct VsOutput
         {
            float2 vUV    : TEXCOORD0;
            float4 vPos   : SV_POSITION;
         };

         VsOutput main( VsInput i )
         {
            VsOutput o;

            o.vPos = float4( sign( i.vPos.xy ), 0.5, 1 );
            o.vPos.y *= -1.0;

            o.vUV = i.vUV;
            o.vUV.y = 1-o.vUV.y;
            float2 vQuadDim;
            vQuadDim.y = fATILogoQuadHeight;
            vQuadDim.x = vQuadDim.y * ( vATITexDim.x / vATITexDim.y ) * ( vRTSize.w / vRTSize.z );

            o.vPos.xy *= vQuadDim;
            o.vPos.xy += float2( 1, -1 ) * ( float2(1, 1) - vQuadDim - float2( 4.0, 4.0 ) / vRTSize.zw );

            o.vPos.xy += float2( -0.5, 0.5 ) / vRTSize.zw;
            return o;
         }
      EndVertexShader

      PixelShader( HLSL )

         sampler sATI;
         Texture2D<float4> tATI;

         struct PSInput
         {
            float2 vUV     : TEXCOORD0;
         }; 

         float4 main( PSInput i ) : SV_TARGET
         {
            return tATI.Sample( sATI, i.vUV ).rgba;
         }
      EndPixelShader
   }

   // ADDITIONAL LOGOS CAN BE DRAWN IN SEPARATE RENDER PASSES

}
