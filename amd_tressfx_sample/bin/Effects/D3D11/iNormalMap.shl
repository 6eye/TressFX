



Texture2D tNormal    < format = ATI2N, colorSpace = Linear,
                          source0 = < slot = "bumpMap", label = "Normal", channels = RG, colorSpace = Linear > >

Float fBumpMult (1.0) < edit = < ui = slider, min = 0, max = 10, slot = "Bump Mult", label = "Bump Mult", animated = false> >


Sampler sNormal
{
   //Filter = MIN_MAG_MIP_LINEAR;
   Filter = ANISOTROPIC;
   MaxAniso = 16;
   Texture = tNormal;
   AddressU = WRAP;
   AddressV = WRAP;
}

StartHLSL NormalMap

	Texture2D<float2> tNormal;
	sampler sNormal;
	float fBumpMult;

	float3 ComputeNormalWS(float3 vVertexNormWS, float3 vTangentWS, float3 vBinormalWS, float2 vNormUV)
	{
	   vVertexNormWS   = normalize( vVertexNormWS );
	   vTangentWS = normalize( vTangentWS );
	   vBinormalWS = normalize( vBinormalWS );
	   float3x3 mTangentSpace = { vTangentWS, vBinormalWS, vVertexNormWS };
	
	   float2 cNormalTS = tNormal.Sample( sNormal, vNormUV );
	   float3 vNormalTS = SuComputeNormalATI2N( cNormalTS );
	   vNormalTS.xy *= fBumpMult;
	   vNormalTS = normalize(vNormalTS);
	   float3 vNormalWS = mul( vNormalTS, mTangentSpace );
	
	   return normalize(vNormalWS);
	}


EndHLSL
