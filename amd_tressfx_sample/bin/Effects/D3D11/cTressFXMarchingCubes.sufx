// ART NOTES ======================================================================================================================

ArtNotes
{
    TressFX marching cubes compute shader
}

// DEFINES =======================================================================================================================
#define THREAD_GROUP_SIZE 64

// INCLUDES =======================================================================================================================
#include "iTressFXMarchingCubes.shl"

// constant buffer
Vector g_Origin < >
Float g_CellSize < >
Int g_NumCellsX < >
Int g_NumCellsY < >
Int g_NumCellsZ < >

Int g_MaxMarchingCubesVertices < >
Float g_MarchingCubesIsolevel < >

RWStructuredBuffer g_SignedDistanceField < >

//Marching cubes
RWStructuredBuffer g_MarchingCubesTriangleVertices < >
RWStructuredBuffer g_MarchingCubesTriangleIndices < >
RWStructuredBuffer g_NumMarchingCubesVertices < >

StructuredBuffer g_MarchingCubesEdgeTable < >
StructuredBuffer g_MarchingCubesTriangleTable < >

ComputeTechnique TressFXCollision_InitializeMCVertices
{
    Pass C0
{
    ComputeShader(HLSL, EntryPoint = "InitializeMCVertices")
    $include "TressFXMarchingCubesCS"
    EndComputeShader
}
}

ComputeTechnique TressFXCollision_RunMarchingCubesOnSdf
{
    Pass C0
{
    ComputeShader(HLSL, EntryPoint = "RunMarchingCubesOnSdf")
    $include "TressFXMarchingCubesCS"
    EndComputeShader
}
}
