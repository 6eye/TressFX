


StartHLSL "Phong"

struct BRDFParams
{
	float fSpecExp;
};


// Hopefull compiler is smart enough to optimize out the float3
// until actually multiplied by something interesting.
	void ComputeDiffuseSpecBRDF( float3 vLightVecWS,
                                            float3 vNormalWS,
                                            float3 vViewWS,
                                            BRDFParams brdfParams,
                                            out float3 cDiffuse,
                                            out float3 cSpecular )
   {


   		float3 vReflectedViewWS = SuReflect( normalize(vViewWS), vNormalWS );
		float fDiffuse = saturate( abs(dot( vLightVecWS, vNormalWS )) );
		float normalization = (brdfParams.fSpecExp + 2) / (2.0*3.141596 * 20);
		float fSpecular = normalization * SuPow( saturate( dot( vLightVecWS, vReflectedViewWS ) ), brdfParams.fSpecExp );
		if(brdfParams.fSpecExp <= 0) fSpecular = 0;
		cDiffuse = float3(fDiffuse,fDiffuse,fDiffuse);
		cSpecular = float3(fSpecular,fSpecular,fSpecular);
   }


EndHLSL

