// ART NOTES ======================================================================================================================

ArtNotes
{
   TressFX simulation compute shader
}


// For capsule collisions
#define TRESSFX_MAX_NUM_COLLISION_CAPSULES 8

// As a reference, following variables are defined in oPhongSk.sufx
//#define SU_SKINNING_MAX_BONES 200
//#define SU_SKINNING_NUM_BONES 4

// INCLUDES =======================================================================================================================
#include "TressFXSimulation.hlsl"

// Constant buffer variables
Vector g_Wind < >
Vector g_Wind1 < >
Vector g_Wind2 < >
Vector g_Wind3 < >

Vector  g_Shape < >                
Vector  g_GravTimeTip < >
VectorI g_SimInts < >              
VectorI g_Counts < >               
Vector  g_VSP < >

//Vector g_BoneSkinningDQ[AMD_TRESSFX_MAX_NUM_BONES*2] < >
Matrix g_BoneSkinningMatrix[AMD_TRESSFX_MAX_NUM_BONES] < >


// Capsule collisions
Vector g_centerAndRadius0[TRESSFX_MAX_NUM_COLLISION_CAPSULES] < >
Vector g_centerAndRadius1[TRESSFX_MAX_NUM_COLLISION_CAPSULES] < >
VectorI g_numCollisionCapsules < >


// UAVs
RWStructuredBuffer g_HairVertexPositions     < >
RWStructuredBuffer g_HairVertexPositionsPrev < >
RWStructuredBuffer g_HairVertexPositionsPrevPrev < >
RWStructuredBuffer g_HairVertexTangents      < >

// Uncomment the following line if USE_MESH_BASED_HAIR_TRANSFORM is set to 1 in TressFXSimulation.hlsl.
//RWStructuredBuffer g_Transforms < >

// SRVs
StructuredBuffer g_InitialHairPositions  < >
StructuredBuffer g_GlobalRotations         < >
StructuredBuffer g_HairRestLengthSRV       < >
StructuredBuffer g_HairStrandType          < >
StructuredBuffer g_HairRefVecsInLocalFrame < >
StructuredBuffer g_FollowHairRootOffset    < >
StructuredBuffer g_BoneSkinningData        < >

ComputeTechnique TressFXSimulation_IntegrationAndGlobalShapeConstraints
{
	Pass C0
	{
		ComputeShader( HLSL, EntryPoint="IntegrationAndGlobalShapeConstraints" )
			$include "TressFXSimulationCS"				
		EndComputeShader	
	}
}

ComputeTechnique TressFXSimulation_VelocityShockPropagation
{
	Pass C0
{
	ComputeShader(HLSL, EntryPoint = "VelocityShockPropagation")
	$include "TressFXSimulationCS"
	EndComputeShader
}
}

ComputeTechnique TressFXSimulation_LocalShapeConstraints
{
	Pass C0
	{
		ComputeShader( HLSL, EntryPoint="LocalShapeConstraints" )
			$include "TressFXSimulationCS"				
		EndComputeShader	
	}
}

ComputeTechnique TressFXSimulation_LengthConstriantsWindAndCollision
{
	Pass C0
	{
		ComputeShader( HLSL, EntryPoint="LengthConstriantsWindAndCollision" )
			$include "TressFXSimulationCS"				
		EndComputeShader	
	}
}

ComputeTechnique TressFXSimulation_UpdateFollowHairVertices
{
	Pass C0
	{
		ComputeShader( HLSL, EntryPoint="UpdateFollowHairVertices" )
			$include "TressFXSimulationCS"				
		EndComputeShader	
	}
}










